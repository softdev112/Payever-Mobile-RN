{
  "extends": "airbnb",
  "parser": "babel-eslint",

  "plugins": [
    "flowtype",
    "sort-class-members"
  ],

  "settings": {
    "import/core-modules": ["ui"],
    "import/extensions": [".js", ".json", ".png"]
  },

  "globals": {
    "__DEV__": true,
    "fetch": true,
    "log": true,
    "Response": true
  },

  "rules": {
    "arrow-body-style": 0,
    "camelcase": 0,
    "class-methods-use-this": 0,
    "comma-dangle": ["error", {
      "arrays": "always-multiline",
      "objects": "always-multiline",
      "imports": "always-multiline",
      "exports": "always-multiline",
      "functions": "never"
    }],
    "eol-last": [2, "never"],
    "key-spacing": [2, {
      "beforeColon": false,
      "afterColon": true,
      "mode": "minimum"
    }],
    "max-len": [1, 80],
    "no-console": 0,
    "no-multi-spaces": [2, { "exceptions": {
      "Property": true,
      "VariableDeclarator": true,
      "AssignmentExpression": true
    } }],
    "no-param-reassign": 0,
    "no-restricted-syntax": [
      "error",
      "LabeledStatement",
      "WithStatement"
    ],
    "no-return-assign": 0,
    "no-use-before-define": 0,
    "prefer-template": 0,
    "react/jsx-filename-extension": [2, { "extensions": [".js"] }],
    "react/jsx-no-bind": 0,
    "react/react-in-jsx-scope": 0,
    "react/sort-comp": 0,
    "sort-class-members/sort-class-members": [2, {
      "order": [
        "displayName",
        "[static-properties]",
        "contextTypes",
        "childContextTypes",
        "defaultProps",
        "[properties]",
        "[static-methods]",
        "[conventional-private-properties]",
        "constructor",
        "[lifecycle]",
        "[event-handlers]",
        "[methods]",
        "[react-getters-setters]",
        "[conventional-private-methods]",
        "[everything-else]",
        "[sub-renderers]",
        "render"
      ],
      "groups": {
        "event-handlers": [{ "name": "/on.+/", "type": "method" }],
        "react-getters-setters": [{
          "name": "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
          "type": "method"
        }],
        "sub-renderers": [{ "name": "/^render.+$/", "type": "method" }],
        "lifecycle": [
          "componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "componentDidUpdate",
          "componentWillUnmount"
        ]
      },
      "accessorPairPositioning": "getThenSet"
    }]
  }
}